#!/bin/sh
#
# Managed by puppet
# Init file for Apache Kafka
#
# chkconfig: 35 85 15
# description: Apache Kafka is a distributed publish-subscribe messaging system
# pidfile: /var/run/kafka.pid

#source function library
. /etc/rc.d/init.d/functions

NAME=<%= @service_name %>
PID_FILE=/var/run/$NAME.pid
KAFKA_USER=<%= @user %>

MAX_WAIT=30 #wait for max 30 seconds when restarting kafka, to allow for port release of JMX port.
DAEMON="<%= @startup_script_dir + "/kafka-server-start.sh"%>"
DAEMON_OPTS="<%= @conf_dir + "/server.properties"%>"
export KAFKA_JMX_OPTS="<%= @jmx_opts %>"
CMD="KAFKA_JMX_OPTS=\"$KAFKA_JMX_OPTS\" $DAEMON $DAEMON_OPTS > <%= @app_log_dir + "/server.out"%> 2> <%= @app_log_dir + "/server.err"%> &"

start() {
  ulimit -n <%= @max_nofiles %>
  ulimit -s <%= @max_stacksize %>
  ulimit -c <%= @max_corefiles_size %>
  if [ -f $PID_FILE ]
  then
    PID=`cat $PID_FILE`
    if [ ! -z "`ps -ef | awk '{print $2}' | grep "^$PID$"`" ]
    then
      echo "$PID_FILE exists, process is already running"
      exit 0
    else
      echo "$PID_FILE exists but the process is not running. Deleting $PID_FILE and re-trying"
      rm -f $PID_FILE
      start
    fi
  else
    daemon --user $KAFKA_USER --check $NAME $CMD
    sleep 2
    PID=`ps ax | grep -E '[k]afka.Kafka' | awk '{print $1}'`
    echo $PID > $PID_FILE;
    echo "$NAME started $PID"
  fi
}

stop() {
  if [ ! -f $PID_FILE ]
  then
    echo "$PID_FILE does not exist, process is not running"
    return 1
  else
    killproc -p $PID_FILE -d $MAX_WAIT
    rm -f $PID_FILE;
    echo "$NAME stopped"
    return 0
  fi
}

status() {
  if [ -f $PID_FILE ]
  then
    PID=`cat $PID_FILE`
    if [ -z "`ps -ef | awk '{print $2}' | grep "^$PID$"`" ]
    then
      echo "$NAME stopped but pid file exists"
      exit 1
    else
      echo "$NAME running with pid $PID"
      exit 0
    fi
  else
    echo "$NAME stopped"
    exit 1
  fi
}

case "$1" in
  status)
    status
	;;
  start)
    echo "Starting daemon: "$NAME
    start
	;;
  stop)
    echo "Stopping daemon: "$NAME
    stop
	;;
  restart)
    echo "Restarting daemon: "$NAME
	  stop
    start
	;;

  *)
	echo "Usage: "$1" {status|start|stop|restart}"
	exit 1
esac

exit 0
